<?php

namespace App\Models;

use Cviebrock\EloquentSluggable\Sluggable;
use Illuminate\Database\Eloquent\Factories\HasFactory;
use Illuminate\Database\Eloquent\Model;


class Post extends Model
{
    use HasFactory, Sluggable;

    // protected $fillable = ['title', 'excerpt', 'body'];
    protected $guarded = ['id'];

    // mengatasi masalah tentang lazy loading dan eager loading
    protected $with = ['author', 'category'];

    public function sluggable(): array
    {
        return [
            'slug' => [
                'source' => 'title'
            ]
        ];
    }

    // public function scopeFilter($query, array $filters)
    // {
    //     //sama saja tapi tidak menggunakan 'when' dari laravel
    //     // if($filters['search'] ?? false){
    //     //     return $query->where('title', 'like', '%' . $filters['search'] . '%')
    //     //             ->orWhere('body', 'like', '%' . $filters['search'] . '%');
    //     // }

    //     $query->when($filters['search'] ?? false, function($query, $search){
    //         return $query->where('title', 'like', '%' . $search. '%')
    //                 ->orWhere('body', 'like', '%' . $search. '%');
    //     });

    //     $query->when($filters['category'] ?? false, function($query, $category) {
    //         return $query->whereHas('category', function($query) use ($category) {
    //             $query->where('slug', $category);
    //         });
    //     });
    // }
    public function scopeFilter($query, array $filters)
    {
        $query->when($filters['search'] ?? false, function ($query, $search) {
            $query->where(function ($query) use ($search) {
                $query->where('title', 'like', '%'.$search.'%')
                      ->orWhere('body', 'like', '%'.$search.'%');
            });
        });

        $query->when($filters['category'] ?? false, function ($query, $categorySlug) {
            $query->whereHas('category', function ($query) use ($categorySlug) {
                $query->where('slug', $categorySlug);
            });
        });

        $query->when($filters['author'] ?? false, function ($query, $authorSlug) {
            $query->whereHas('author', function ($query) use ($authorSlug) {
                $query->where('username', $authorSlug);
            });
        });
    }

    public function category()
    {
        return $this->belongsTo(Category::class);
    }

    public function author()
    {
        return $this->belongsTo(User::class, 'user_id');
    }

    public function getRouteKeyName()
    {
        // return parent::getRouteKeyName(); // TODO: Change the autogenerated stub
        return 'slug';
    }

}
